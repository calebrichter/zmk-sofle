#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/outputs.h>

&mmv_input_listener {
    input-processors = <&zip_xy_scaler 2 1>;
};

&msc_input_listener {
    input-processors = <&zip_scroll_scaler 2 1>;
};

&msc {
    acceleration-exponent = <1>;
    time-to-max-speed-ms = <100>;
    delay-ms = <0>;
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;
        tap-ms = <100>;
    };

    behaviors {
        mt_lalt_x: mt_lalt_x {
            compatible = "zmk,behavior-mod-morph";
            label = "MT_LALT_X";
            #binding-cells = <0>;
            bindings = <&kp X>, <&kp LALT>;
        };

        mt_lctl_tab: mt_lctl_tab {
            compatible = "zmk,behavior-hold-tap";
            label = "MT_LCTL_TAB";
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            #binding-cells = <2>;
            bindings = <&kp LCTRL>, <&kp TAB>;
        };

        mt_sft_del: mt_sft_del {
            compatible = "zmk,behavior-hold-tap";
            label = "MT_SFT_DEL";
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            #binding-cells = <2>;
            bindings = <&kp LSHFT>, <&kp DEL>;
        };

        lt_2_ent: lt_2_ent {
            compatible = "zmk,behavior-hold-tap";
            label = "LT_2_ENT";
            flavor = "balanced";
            tapping-term-ms = <200>;
            #binding-cells = <2>;
            bindings = <&mo 2>, <&kp RET>;
        };
    };

    macros {
        macro_ctrl_bspc: macro_ctrl_bspc {
            compatible = "zmk,behavior-macro";
            label = "MACRO_CTRL_BSPC";
            #binding-cells = <0>;
            bindings = <&kp LCTRL &kp BSPC>;
        };

        macro_copy: macro_copy {
            compatible = "zmk,behavior-macro";
            label = "MACRO_COPY";
            #binding-cells = <0>;
            bindings = <&macro_press &kp LCTRL>, <&macro_tap &kp C>, <&macro_release &kp LCTRL>;
        };

        macro_paste: macro_paste {
            compatible = "zmk,behavior-macro";
            label = "MACRO_PASTE";
            #binding-cells = <0>;
            bindings = <&macro_press &kp LCTRL>, <&macro_tap &kp V>, <&macro_release &kp LCTRL>;
        };

        macro_cw: macro_cw { 
            compatible = "zmk,behavior-macro";
            label = "MACRO_CW";
            #binding-cells = <0>;
            bindings = <&kp LCTRL &kp LEFT>;
        };

        macro_sel_cw: macro_sel_cw { 
            compatible = "zmk,behavior-macro";
            label = "MACRO_SEL_CW";
            #binding-cells = <0>;
            bindings = <&macro_press &kp LCTRL &kp LSHFT>, <&macro_tap &kp LEFT>, <&macro_release &kp LCTRL &kp LSHFT>;
        };

        macro_sel_cnw: macro_sel_cnw { 
            compatible = "zmk,behavior-macro";
            label = "MACRO_SEL_CNW";
            #binding-cells = <0>;
            bindings = <&macro_press &kp LCTRL &kp LSHFT>, <&macro_tap &kp RIGHT>, <&macro_release &kp LCTRL &kp LSHFT>;
        };

        macro_cnw: macro_cnw { 
            compatible = "zmk,behavior-macro";
            label = "MACRO_CNW";
            #binding-cells = <0>;
            bindings = <&kp LCTRL &kp RIGHT>;
        };

        macro_sel_home: macro_sel_home { 
            compatible = "zmk,behavior-macro";
            label = "MACRO_SEL_HOME";
            #binding-cells = <0>;
            bindings = <&kp LSHFT &kp HOME>;
        };

        macro_sel_end: macro_sel_end { 
            compatible = "zmk,behavior-macro";
            label = "MACRO_SEL_END";
            #binding-cells = <0>;
            bindings = <&kp LSHFT &kp END>;
        };

        macro_snippet: macro_snippet { 
            compatible = "zmk,behavior-macro";
            label = "MACRO_SNIPPET";
            #binding-cells = <0>;
            bindings = <&macro_press &kp LGUI &kp LSHFT>, <&macro_tap &kp S>, <&macro_release &kp LGUI &kp LSHFT>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        layer0 { 
            display-name = "Base";
            sensor-bindings = <&scroll_encoder>; 
            bindings = <
&kp ESC      &kp N1         &kp N2         &kp N3             &kp N4    &kp N5              &kp BSLH    &kp N0         &kp N9         &kp N8         &kp N7    &kp N6
&kp DEL      &kp SQT        &kp COMMA      &kp DOT            &kp P     &kp Y               &kp FSLH    &kp L          &kp R          &kp C          &kp G     &kp F
&kp LCTRL    &kp A          &kp O          &kp E              &kp U     &kp I               &kp MINUS   &kp S          &kp N          &kp T          &kp H     &kp D
&kp LSHFT    &kp SEMI       &kp Q          &kp J              &kp K     &mt_lalt_x          &kp RGUI    &kp Z          &kp V          &kp W          &kp M     &kp B
                             &lt_2_ent      &mt_lctl_tab       &macro_ctrl_bspc &kp BSPC     &mo 1       &kp SPACE      &mt_sft_del    &mkp LCLK       &none     &none
            >;
        };

        layer_1 {
            display-name = "Symbols/Nav";
            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>; 
            bindings = <
&kp GRAVE    &kp LS(N1)     &kp LS(N2)     &kp LS(N3)         &kp LS(N4)    &kp LS(N5)        &kp LS(MINUS) &kp LS(N0)   &kp LS(N9)    &kp LS(N8)    &kp LS(N7)  &kp LS(N6)
&rgb_mod     &none          &kp F2         &kp F3             &kp F11       &mkp RCLK          &kp LS(BSLH)  &macro_cnw   &macro_sel_cnw &macro_sel_cw &macro_cw   &kp F5
&rgb_tog     &kp LS(N9)     &kp LS(N0)     &kp LS(LBRC)       &kp LS(RBRC)  &mkp LCLK          &kp EQUAL     &kp RIGHT    &kp DOWN       &kp UP        &kp LEFT    &kp LS(RIGHT)
&rgb_rmod    &macro_snippet &kp LBRC       &kp RBRC           &kp PG_DN     &kp PG_UP    &kp PDOT      &kp END      &macro_sel_end &macro_sel_home &kp HOME  &kp F12
                             &trans         &none              &none         &none             &trans        &none        &mkp RCLK       &mkp LCLK      &none      &none
            >;
        };

        layer_2 {
            display-name = "Media/Custom";
            sensor-bindings = <&scroll_encoder>; 
            bindings = <
&kp F12      &kp F1         &kp F2         &kp F3             &kp F4        &kp F5            &kp F11        &kp F10       &kp F9       &kp F8      &kp F7        &kp F6
&kp C_NEXT   &none          &none          &none              &none         &none             &kp C_VOL_UP   &none          &none        &none       &none         &none
&kp C_PP     &kp LS(N1)     &kp LS(N2)     &kp LS(N3)         &kp LS(N4)    &kp LS(N5)        &kp LS(EQUAL)  &kp LS(N0)     &kp LS(N9)   &kp LS(N8)  &kp LS(N7)    &kp LS(N6)
&kp C_PREV   &kp HOME       &kp PG_UP      &kp PG_DN          &macro_copy   &macro_paste      &kp C_VOL_DN   &none          &none        &none       &none         &none
                             &trans         &trans             &trans        &trans            &trans        &trans         &none          &none       &none         &none
            >;
        };
        
        layer_3 {
            display-name = "System";
            sensor-bindings = <&scroll_encoder>; 
            bindings = <
&bootloader  &sys_reset     &none          &none              &none         &none             &sys_reset    &bootloader    &none          &none       &none         &none
&trans       &bt BT_SEL 0   &bt BT_SEL 1   &bt BT_SEL 2       &bt BT_SEL 3  &bt BT_SEL 4      &bt BT_CLR     &bt BT_CLR_ALL &none          &none       &none         &none
&trans       &out OUT_USB   &out OUT_BLE   &trans             &trans        &trans            &trans         &trans         &trans         &trans      &trans        &trans
&trans       &trans         &trans         &trans             &trans        &trans            &trans         &trans         &trans         &trans      &trans        &trans
                             &mkp MB3       &mkp RCLK           &mkp LCLK      &none             &mo 3          &mkp MB3       &mkp LCLK       &mkp RCLK    &none         &none
            >;
        };
    };
}