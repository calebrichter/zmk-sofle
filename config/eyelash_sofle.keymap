#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <dt-bindings/zmk/behaviors.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/ext_power.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;
    time-to-max-speed-ms = <100>;
    delay-ms = <0>;
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <2>;
    trigger-period-ms = <16>;
};

/ {
    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    mt_mo_kp: mt_mo_kp {
        compatible = "zmk,behavior-hold-tap";
        label = "MT_MO_KP";
        bindings = <&mo>, <&kp>;

        #binding-cells = <2>;
        tapping-term-ms = <200>;
        flavor = "balanced";
    };

    macros {
        macro_ctrl_bspc: macro_ctrl_bspc {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LCTRL &kp BSPC>;
        };

        macro_copy: macro_copy {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL>,
                <&macro_tap>,
                <&kp C>,
                <&macro_release>,
                <&kp LCTRL>;
        };

        macro_paste: macro_paste {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL>,
                <&macro_tap>,
                <&kp V>,
                <&macro_release>,
                <&kp LCTRL>;
        };

        macro_sel_cw: macro_sel_cw {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL &kp LSHFT>,
                <&macro_tap>,
                <&kp LEFT>,
                <&macro_release>,
                <&kp LCTRL &kp LSHFT>;
        };

        macro_sel_cnw: macro_sel_cnw {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL &kp LSHFT>,
                <&macro_tap>,
                <&kp RIGHT>,
                <&macro_release>,
                <&kp LCTRL &kp LSHFT>;
        };

        macro_cnw: macro_cnw {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL>,
                <&macro_tap>,
                <&kp RIGHT>,
                <&macro_release>,
                <&kp LCTRL>;
        };

        macro_sel_home: macro_sel_home {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LSHFT>,
                <&macro_tap>,
                <&kp HOME>,
                <&macro_release>,
                <&kp LEFT_SHIFT>;
        };

        macro_snippet: macro_snippet {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LGUI &kp LSHFT>,
                <&macro_tap>,
                <&kp S>,
                <&macro_release>,
                <&kp LGUI &kp LSHFT>;
        };

        macro_cw: macro_cw {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL>,
                <&macro_tap>,
                <&kp LEFT>,
                <&macro_release>,
                <&kp LCTRL>;

            label = "MACRO_CW";
        };

        mac_sel_cw: mac_sel_cw {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_ALT &kp LSHFT>,
                <&macro_tap>,
                <&kp LEFT>,
                <&macro_release>,
                <&kp LALT &kp LSHFT>;

            label = "MAC_SEL_CW";
        };

        mac_sel_cnw: mac_sel_cnw {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT &kp LSHFT>,
                <&macro_tap>,
                <&kp RIGHT>,
                <&macro_release>,
                <&kp LALT &kp LSHFT>;

            label = "MAC_SEL_CNW";
        };

        mac_cnw: mac_cnw {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp RIGHT>,
                <&macro_release>,
                <&kp LALT>;

            label = "MAC_CNW";
        };

        mac_cw: mac_cw {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp LEFT>,
                <&macro_release>,
                <&kp LALT>;

            label = "MAC_CW";
        };

        macro_sel_end: macro_sel_end {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LSHFT>,
                <&macro_tap>,
                <&kp END>,
                <&macro_release>,
                <&kp LEFT_SHIFT>;

            label = "MACRO_SEL_END";
        };
    };

    behaviors {
    };

    keymap {
        compatible = "zmk,keymap";

        Base {
            bindings = <
&kp ESC              &kp N1        &kp N2     &kp N3        &kp N4           &kp N5         &mmv MOVE_UP     &kp N6     &kp N7     &kp N8            &kp N9       &kp N0  &kp LS(PIPE)
&mt LC(LSHFT) GRAVE  &kp SQT       &kp COMMA  &kp DOT       &kp P            &kp Y          &mmv MOVE_DOWN   &kp F      &kp G      &kp C             &kp R        &kp L   &kp FSLH
&mt LCTRL TAB        &kp A         &kp O      &kp E         &kp U            &kp I          &mmv MOVE_LEFT   &kp D      &kp H      &kp T             &kp N        &kp S   &kp MINUS
&kp LSHFT            &kp SEMI      &kp Q      &kp J         &kp K            &kp X          &mmv MOVE_RIGHT  &kp B      &kp M      &kp W             &kp V        &kp Z   &kp RGUI
&kp ESC              &kp LEFT_ALT  &mo 3      &kp LC(BSPC)  &lt 2 BACKSPACE  &lt 3 ENTER    &mkp MB1         &kp SPACE  &kp RSHFT  &mt RCTRL DELETE  &kp LC(DEL)  &to 1
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        Mac {
            bindings = <
&kp ESC              &kp N1        &kp N2     &kp N3        &kp N4           &kp N5         &mmv MOVE_UP     &kp N6     &kp N7     &kp N8            &kp N9       &kp N0  &kp LS(PIPE)
&mt LG(LSHFT) GRAVE  &kp SQT       &kp COMMA  &kp DOT       &kp P            &kp Y          &mmv MOVE_DOWN   &kp F      &kp G      &kp C             &kp R        &kp L   &kp FSLH
&mt LEFT_GUI TAB     &kp A         &kp O      &kp E         &kp U            &kp I          &mmv MOVE_LEFT   &kp D      &kp H      &kp T             &kp N        &kp S   &kp MINUS
&kp LSHFT            &kp SEMI      &kp Q      &kp J         &kp K            &kp X          &mmv MOVE_RIGHT  &kp B      &kp M      &kp W             &kp V        &kp Z   &kp RCTRL
&tog 0               &kp LEFT_ALT  &mo 3      &kp LA(BSPC)  &lt 4 BACKSPACE  &lt 3 ENTER    &mkp MB1         &kp SPACE  &kp RSHFT  &mt RCTRL DELETE  &kp LC(DEL)  &to 0
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        Movement {
            bindings = <
&kp LS(TILDE)  &kp LS(EXCL)  &kp LS(AT)    &kp LS(POUND)  &kp LS(DLLR)    &kp LS(PRCNT)    &kp UP     &kp LS(CARET)  &kp LS(AMPS)  &kp LS(STAR)     &kp LS(LPAR)    &kp LS(RPAR)  &kp EQUAL
&kp LSHFT      &kp F1        &kp F2        &kp F3         &kp F11         &mkp MB2         &kp DOWN   &kp F5         &macro_cw     &macro_sel_cw    &macro_sel_cnw  &macro_cnw    &kp BSLH
&kp LSHFT      &kp LS(LPAR)  &kp LS(RPAR)  &kp LS(LBRC)   &kp LS(RBRC)    &mkp MB2         &kp LEFT   &kp LS(PLUS)   &kp LEFT      &kp UP           &kp DOWN        &kp RIGHT     &kp EQUAL
&kp LSHFT      &kp LSHFT     &kp LBKT      &kp RBKT       &msc SCRL_DOWN  &msc SCRL_UP     &kp RIGHT  &kp F12        &kp HOME      &macro_sel_home  &macro_sel_end  &kp END       &kp DOT
&kp RET        &trans        &trans        &trans         &trans          &trans           &kp RET    &trans         &trans        &trans           &trans          &trans
            >;

            sensor-bindings = <&inc_dec_kp PAGE_UP PAGE_DOWN>;
        };

        Symbols {
            bindings = <
&kp F12          &kp F1            &kp F2            &kp F3            &kp F4            &kp F5           &kp F6  &kp F6         &kp F7        &kp F8        &kp F9        &kp F10       &kp F11
&bl BL_TOG       &kp RG(NUMBER_1)  &kp RG(NUMBER_2)  &kp RG(NUMBER_3)  &kp RG(NUMBER_4)  &kp RG(N5)       &trans  &trans         &trans        &trans        &trans        &trans        &trans
&rgb_ug RGB_TOG  &kp LS(EXCL)      &kp LS(AT)        &kp LS(POUND)     &kp LS(DLLR)      &kp LS(PRCNT)    &trans  &kp LS(CARET)  &kp LS(AMPS)  &kp LS(STAR)  &kp LS(LPAR)  &kp LS(RPAR)  &kp LSHFT
&trans           &kp RG(NUMBER_6)  &trans            &trans            &kp RG(TAB)       &trans           &trans  &trans         &trans        &trans        &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2
&trans           &trans            &trans            &trans            &trans            &trans           &trans  &trans         &trans        &trans        &trans        &to 1
            >;
        };

        MacMovement {
            bindings = <
&kp LS(TILDE)  &kp LS(EXCL)  &kp LS(AT)    &kp LS(POUND)  &kp LS(DLLR)    &kp LS(PRCNT)    &kp UP     &kp LS(CARET)  &kp LS(AMPS)  &kp LS(STAR)     &kp LS(LPAR)    &kp LS(RPAR)  &kp EQUAL
&kp LSHFT      &kp F1        &kp F2        &kp F3         &kp F11         &mkp MB2         &kp DOWN   &kp F5         &mac_cw       &mac_sel_cw      &mac_sel_cnw    &mac_cnw      &kp BSLH
&kp LSHFT      &kp LS(LPAR)  &kp LS(RPAR)  &kp LS(LBRC)   &kp LS(RBRC)    &mkp MB2         &kp LEFT   &kp LS(PLUS)   &kp LEFT      &kp UP           &kp DOWN        &kp RIGHT     &kp EQUAL
&kp LSHFT      &kp LSHFT     &kp LBKT      &kp RBKT       &msc SCRL_DOWN  &msc SCRL_UP     &kp RIGHT  &kp F12        &kp HOME      &macro_sel_home  &macro_sel_end  &kp END       &kp DOT
&kp RET        &trans        &trans        &trans         &trans          &trans           &kp RET    &trans         &trans        &trans           &trans          &trans
            >;

            sensor-bindings = <&inc_dec_kp PAGE_UP PAGE_DOWN>;
        };
    };
};
